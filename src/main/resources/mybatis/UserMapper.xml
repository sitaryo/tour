<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.licky.tour.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.licky.tour.domain.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="sex" jdbcType="BIT" property="sex" />
    <result column="longitude" jdbcType="VARCHAR" property="longitude" />
    <result column="latitude" jdbcType="VARCHAR" property="latitude" />
    <result column="authority_id" jdbcType="INTEGER" property="authorityId" />
    <result column="head_pic_id" jdbcType="INTEGER" property="headPicId" />
    <result column="team_id" jdbcType="INTEGER" property="teamId" />
    <result column="active" jdbcType="BIT" property="active" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, nickname , password, sex, longitude, latitude, authority_id, head_pic_id, team_id,
    active
  </sql>
  <sql id="User_Base_Info">
    id, username, nickname, sex, longitude, latitude, head_pic_id, team_id,
    active
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByUsernameAndPassword" parameterType="User" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where username = #{username} and password = #{password};
  </select>

  <select id="selectUsersInSameTeam" parameterType="User" resultMap="BaseResultMap">
    select
    *
    from user
    where team_id in (
      SELECT team_id from user WHERE  username = #{username}
    );
  </select>

  <select id="selectByUsername" parameterType="String" resultMap="BaseResultMap">
    select
    *
    from user
    where username = #{username};
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.licky.tour.domain.User">
    insert into user (id, username, password, 
      sex, longitude, latitude, 
      authority_id, head_pic_id, team_id, 
      active)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{sex,jdbcType=BIT}, #{longitude,jdbcType=VARCHAR}, #{latitude,jdbcType=VARCHAR}, 
      #{authorityId,jdbcType=INTEGER}, #{headPicId,jdbcType=INTEGER}, #{teamId,jdbcType=INTEGER}, 
      #{active,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.licky.tour.domain.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="authorityId != null">
        authority_id,
      </if>
      <if test="headPicId != null">
        head_pic_id,
      </if>
      <if test="teamId != null">
        team_id,
      </if>
      <if test="active != null">
        active,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=BIT},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="authorityId != null">
        #{authorityId,jdbcType=INTEGER},
      </if>
      <if test="headPicId != null">
        #{headPicId,jdbcType=INTEGER},
      </if>
      <if test="teamId != null">
        #{teamId,jdbcType=INTEGER},
      </if>
      <if test="active != null">
        #{active,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.licky.tour.domain.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="authorityId != null">
        authority_id = #{authorityId,jdbcType=INTEGER},
      </if>
      <if test="headPicId != null">
        head_pic_id = #{headPicId,jdbcType=INTEGER},
      </if>
      <if test="teamId != null">
        team_id = #{teamId,jdbcType=INTEGER},
      </if>
      <if test="active != null">
        active = #{active,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.licky.tour.domain.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=BIT},
      longitude = #{longitude,jdbcType=VARCHAR},
      latitude = #{latitude,jdbcType=VARCHAR},
      authority_id = #{authorityId,jdbcType=INTEGER},
      head_pic_id = #{headPicId,jdbcType=INTEGER},
      team_id = #{teamId,jdbcType=INTEGER},
      active = #{active,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateBaseInfoByUsername" parameterType="User">
    update user
    <set>
      <if test="nickname != null">
        nickname = #{nickname},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=BIT},
      </if>
    </set>
    where username = #{username}
  </update>

  <update id="removeUserFormTeamByUsername" parameterType="User">
    update user
    set
    team_id = NULL
    where username = #{username}
  </update>

  <update id="resetPasswordByUsername" parameterType="User">
    update user
    set
    password = #{password}
    where username = #{username}
  </update>
</mapper>